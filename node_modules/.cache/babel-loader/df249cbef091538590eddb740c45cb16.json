{"ast":null,"code":"var _jsxFileName = \"/Users/annacrandall/pomo-app/src/TimeLeft.js\";\nimport React from \"react\";\nimport moment from \"moment-duration-format\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TimeLeft = _ref => {\n  let {\n    onBreak,\n    timerOn,\n    setDisplayTime\n  } = _ref;\n\n  const controlTimer = () => {\n    let second = 1000;\n    let date = new Date().getTime();\n    let nextDate = new Date().getTime() + second;\n    let isOnBreak = onBreak;\n\n    if (!timerOn) {\n      let interval = setInterval(() => {\n        date = new Date().getTime();\n\n        if (date > nextDate) {\n          setDisplayTime(prev => {\n            return prev - 1;\n          });\n        }\n\n        nextDate += second;\n      }, 30);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"timer-label\",\n    className: \"border-4 border-black bg-stone-200\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"time-left\",\n      children: onBreak ? breakTime : sessionTime\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: controlTimer,\n      className: \"border border-black rounded m-2\",\n      id: \"start_stop\",\n      children: \"Start/Stop\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_c = TimeLeft;\nexport default TimeLeft;\n\nvar _c;\n\n$RefreshReg$(_c, \"TimeLeft\");","map":{"version":3,"names":["React","moment","TimeLeft","onBreak","timerOn","setDisplayTime","controlTimer","second","date","Date","getTime","nextDate","isOnBreak","interval","setInterval","prev","breakTime","sessionTime"],"sources":["/Users/annacrandall/pomo-app/src/TimeLeft.js"],"sourcesContent":["import React from \"react\"; \nimport moment from \"moment-duration-format\"; \n\nconst TimeLeft = ({ onBreak, timerOn, setDisplayTime }) => {\n    \n    const controlTimer = () => {\n        let second = 1000;\n        let date = new Date().getTime();\n        let nextDate = new Date().getTime() + second; \n        let isOnBreak = onBreak; \n        \n        if (!timerOn) {\n          let interval = setInterval(() => {\n            date = new Date().getTime()\n            if (date > nextDate) {\n                setDisplayTime((prev) => {\n                    return prev - 1;\n                });\n              } nextDate += second;\n          }, 30)\n        }\n    }\n\nreturn (\n    <div id=\"timer-label\" className=\"border-4 border-black bg-stone-200\">\n        <div id=\"time-left\">{onBreak ? breakTime : sessionTime }</div>\n        <button onClick={controlTimer} className=\"border border-black rounded m-2\" id=\"start_stop\">Start/Stop</button> \n        </div>\n  ); \n}\nexport default TimeLeft; "],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;;;AAEA,MAAMC,QAAQ,GAAG,QAA0C;EAAA,IAAzC;IAAEC,OAAF;IAAWC,OAAX;IAAoBC;EAApB,CAAyC;;EAEvD,MAAMC,YAAY,GAAG,MAAM;IACvB,IAAIC,MAAM,GAAG,IAAb;IACA,IAAIC,IAAI,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAX;IACA,IAAIC,QAAQ,GAAG,IAAIF,IAAJ,GAAWC,OAAX,KAAuBH,MAAtC;IACA,IAAIK,SAAS,GAAGT,OAAhB;;IAEA,IAAI,CAACC,OAAL,EAAc;MACZ,IAAIS,QAAQ,GAAGC,WAAW,CAAC,MAAM;QAC/BN,IAAI,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAP;;QACA,IAAIF,IAAI,GAAGG,QAAX,EAAqB;UACjBN,cAAc,CAAEU,IAAD,IAAU;YACrB,OAAOA,IAAI,GAAG,CAAd;UACH,CAFa,CAAd;QAGD;;QAACJ,QAAQ,IAAIJ,MAAZ;MACL,CAPyB,EAOvB,EAPuB,CAA1B;IAQD;EACJ,CAhBD;;EAkBJ,oBACI;IAAK,EAAE,EAAC,aAAR;IAAsB,SAAS,EAAC,oCAAhC;IAAA,wBACI;MAAK,EAAE,EAAC,WAAR;MAAA,UAAqBJ,OAAO,GAAGa,SAAH,GAAeC;IAA3C;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAQ,OAAO,EAAEX,YAAjB;MAA+B,SAAS,EAAC,iCAAzC;MAA2E,EAAE,EAAC,YAA9E;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAMC,CA1BD;;KAAMJ,Q;AA2BN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}