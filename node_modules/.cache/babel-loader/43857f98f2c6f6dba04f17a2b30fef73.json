{"ast":null,"code":"import React from \"react\";\nimport moment from \"moment-duration-format\";\n\nconst TimeLeft = _ref => {\n  let {\n    on\n  } = _ref;\n\n  const controlTimer = () => {\n    let second = 1000;\n    let date = new Date().getTime();\n    let nextDate = new Date().getTime() + second;\n    let isOnBreak = onBreak;\n\n    if (!timerOn) {\n      let interval = setInterval(() => {\n        date = new Date().getTime();\n\n        if (date > nextDate) {}\n      }, 30);\n    }\n  };\n};\n\n_c = TimeLeft;\nexport default TimeLeft;\n\nvar _c;\n\n$RefreshReg$(_c, \"TimeLeft\");","map":{"version":3,"names":["React","moment","TimeLeft","on","controlTimer","second","date","Date","getTime","nextDate","isOnBreak","onBreak","timerOn","interval","setInterval"],"sources":["/Users/annacrandall/pomo-app/src/TimeLeft.js"],"sourcesContent":["import React from \"react\"; \nimport moment from \"moment-duration-format\"; \n\nconst TimeLeft = ({on}) => {\n    const controlTimer = () => {\n        let second = 1000;\n        let date = new Date().getTime();\n        let nextDate = new Date().getTime() + second; \n        let isOnBreak = onBreak; \n        \n        if (!timerOn) {\n          let interval = setInterval(() => {\n            date = new Date().getTime()\n            if (date > nextDate) {\n              \n            }\n          }, 30)\n        }\n      }\n}\nexport default TimeLeft; "],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;;AAEA,MAAMC,QAAQ,GAAG,QAAU;EAAA,IAAT;IAACC;EAAD,CAAS;;EACvB,MAAMC,YAAY,GAAG,MAAM;IACvB,IAAIC,MAAM,GAAG,IAAb;IACA,IAAIC,IAAI,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAX;IACA,IAAIC,QAAQ,GAAG,IAAIF,IAAJ,GAAWC,OAAX,KAAuBH,MAAtC;IACA,IAAIK,SAAS,GAAGC,OAAhB;;IAEA,IAAI,CAACC,OAAL,EAAc;MACZ,IAAIC,QAAQ,GAAGC,WAAW,CAAC,MAAM;QAC/BR,IAAI,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAP;;QACA,IAAIF,IAAI,GAAGG,QAAX,EAAqB,CAEpB;MACF,CALyB,EAKvB,EALuB,CAA1B;IAMD;EACF,CAdH;AAeH,CAhBD;;KAAMP,Q;AAiBN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}